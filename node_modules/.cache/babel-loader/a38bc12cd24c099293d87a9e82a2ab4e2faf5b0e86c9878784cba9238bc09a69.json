{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LuisChavezDelgadoDDR\\\\Desktop\\\\Nueva carpeta\\\\dashboard\\\\src\\\\context\\\\authContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged, GoogleAuthProvider, signInWithPopup, sendPasswordResetEmail } from \"firebase/auth\";\nimport { auth } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst authContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(authContext);\n  if (!context) throw new Error(\"There is no Auth provider\");\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport function AuthProvider(_ref) {\n  _s2();\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const signup = (email, password) => {\n    return createUserWithEmailAndPassword(auth, email, password);\n  };\n  const login = (email, password) => {\n    return signInWithEmailAndPassword(auth, email, password);\n  };\n  const loginWithGoogle = () => {\n    const googleProvider = new GoogleAuthProvider();\n    return signInWithPopup(auth, googleProvider);\n  };\n  const logout = () => signOut(auth);\n  const resetPassword = async email => sendPasswordResetEmail(auth, email);\n  useEffect(() => {\n    const unsubuscribe = onAuthStateChanged(auth, currentUser => {\n      console.log({\n        currentUser\n      });\n      setUser(currentUser);\n      setLoading(false);\n    });\n    return () => unsubuscribe();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(authContext.Provider, {\n    value: {\n      signup,\n      login,\n      user,\n      logout,\n      loading,\n      loginWithGoogle,\n      resetPassword\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","GoogleAuthProvider","signInWithPopup","sendPasswordResetEmail","auth","authContext","useAuth","context","Error","AuthProvider","children","user","setUser","loading","setLoading","signup","email","password","login","loginWithGoogle","googleProvider","logout","resetPassword","unsubuscribe","currentUser","console","log"],"sources":["C:/Users/LuisChavezDelgadoDDR/Desktop/Nueva carpeta/dashboard/src/context/authContext.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  onAuthStateChanged,\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n  sendPasswordResetEmail,\r\n} from \"firebase/auth\";\r\nimport { auth } from \"../firebase\";\r\n\r\nconst authContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(authContext);\r\n  if (!context) throw new Error(\"There is no Auth provider\");\r\n  return context;\r\n};\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const signup = (email, password) => {\r\n    return createUserWithEmailAndPassword(auth, email, password);\r\n  };\r\n\r\n  const login = (email, password) => {\r\n    return signInWithEmailAndPassword(auth, email, password);\r\n  };\r\n\r\n  const loginWithGoogle = () => {\r\n    const googleProvider = new GoogleAuthProvider();\r\n    return signInWithPopup(auth, googleProvider);\r\n  };\r\n\r\n  const logout = () => signOut(auth);\r\n\r\n  const resetPassword = async (email) => sendPasswordResetEmail(auth, email);\r\n\r\n  useEffect(() => {\r\n    const unsubuscribe = onAuthStateChanged(auth, (currentUser) => {\r\n      console.log({ currentUser });\r\n      setUser(currentUser);\r\n      setLoading(false);\r\n    });\r\n    return () => unsubuscribe();\r\n  }, []);\r\n\r\n  return (\r\n    <authContext.Provider\r\n      value={{\r\n        signup,\r\n        login,\r\n        user,\r\n        logout,\r\n        loading,\r\n        loginWithGoogle,\r\n        resetPassword,\r\n      }}\r\n    >\r\n      {children}\r\n    </authContext.Provider>\r\n  );\r\n}"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACtE,SACEC,8BAA8B,EAC9BC,0BAA0B,EAC1BC,OAAO,EACPC,kBAAkB,EAClBC,kBAAkB,EAClBC,eAAe,EACfC,sBAAsB,QACjB,eAAe;AACtB,SAASC,IAAI,QAAQ,aAAa;AAAC;AAEnC,MAAMC,WAAW,gBAAGZ,aAAa,EAAE;AAEnC,OAAO,MAAMa,OAAO,GAAG,MAAM;EAAA;EAC3B,MAAMC,OAAO,GAAGb,UAAU,CAACW,WAAW,CAAC;EACvC,IAAI,CAACE,OAAO,EAAE,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;EAC1D,OAAOD,OAAO;AAChB,CAAC;AAAC,GAJWD,OAAO;AAMpB,OAAO,SAASG,YAAY,OAAe;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EACvC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMmB,MAAM,GAAG,CAACC,KAAK,EAAEC,QAAQ,KAAK;IAClC,OAAOpB,8BAA8B,CAACO,IAAI,EAAEY,KAAK,EAAEC,QAAQ,CAAC;EAC9D,CAAC;EAED,MAAMC,KAAK,GAAG,CAACF,KAAK,EAAEC,QAAQ,KAAK;IACjC,OAAOnB,0BAA0B,CAACM,IAAI,EAAEY,KAAK,EAAEC,QAAQ,CAAC;EAC1D,CAAC;EAED,MAAME,eAAe,GAAG,MAAM;IAC5B,MAAMC,cAAc,GAAG,IAAInB,kBAAkB,EAAE;IAC/C,OAAOC,eAAe,CAACE,IAAI,EAAEgB,cAAc,CAAC;EAC9C,CAAC;EAED,MAAMC,MAAM,GAAG,MAAMtB,OAAO,CAACK,IAAI,CAAC;EAElC,MAAMkB,aAAa,GAAG,MAAON,KAAK,IAAKb,sBAAsB,CAACC,IAAI,EAAEY,KAAK,CAAC;EAE1ErB,SAAS,CAAC,MAAM;IACd,MAAM4B,YAAY,GAAGvB,kBAAkB,CAACI,IAAI,EAAGoB,WAAW,IAAK;MAC7DC,OAAO,CAACC,GAAG,CAAC;QAAEF;MAAY,CAAC,CAAC;MAC5BZ,OAAO,CAACY,WAAW,CAAC;MACpBV,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;IACF,OAAO,MAAMS,YAAY,EAAE;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE,QAAC,WAAW,CAAC,QAAQ;IACnB,KAAK,EAAE;MACLR,MAAM;MACNG,KAAK;MACLP,IAAI;MACJU,MAAM;MACNR,OAAO;MACPM,eAAe;MACfG;IACF,CAAE;IAAA,UAEDZ;EAAQ;IAAA;IAAA;IAAA;EAAA,QACY;AAE3B;AAAC,IA7CeD,YAAY;AAAA,KAAZA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}